# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Release Mac ARM

on:
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:
  build:

    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3

      - name: Check version
        run: |
          TAG=${{ github.ref_name }}
          PROPERTIES_PATH=gradle.properties
          APP_VERSION=$(awk -F'=' '/^app.version/ {print $2}' $PROPERTIES_PATH)
          if [ "$TAG" != "$APP_VERSION" ]; then
            echo "Tag $TAG does not match app version $APP_VERSION"
            exit 1
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Prepare signing
        run: |
          # Configure the local.properties file with the necessary information for signing
          echo "compose.desktop.mac.sign=true" > local.properties
          echo "compose.desktop.mac.signing.identity=${{ secrets.MACOS_CERTIFICATE_IDENTITY }}" >> local.properties
          echo "compose.desktop.mac.notarization.appleID=${{ secrets.APPLE_ID }}" >> local.properties
          echo "compose.desktop.mac.notarization.password=${{ secrets.MACOS_APP_PWD }}" >> local.properties
          echo "compose.desktop.mac.notarization.teamID=${{ secrets.APPLE_TEAM_ID }}" >> local.properties
          cat local.properties

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: notarizeDmg

      - name: Rename
        run: |
          VERSION=${{ github.ref_name }}
          echo $VERSION
          PREFIX=$(echo $VERSION | cut -d'-' -f 1)
          echo $PREFIX
          mv ./build/compose/binaries/main/dmg/vLabeler-$PREFIX.dmg ./vlabeler-$VERSION-mac-arm64.dmg

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: vlabeler-${{ github.ref_name }}-mac-arm64.dmg
